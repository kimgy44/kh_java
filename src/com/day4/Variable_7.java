package com.day4;

public class Variable_7 {
	/*************************************
	 * 
	 ************************************/
	void methodA() {
		// return 5;
	}
	/**************************
	 * 
	 * @return 안녕 - 하면 안됨    //무조건 타입을 맞춰야 한다. 
	 ***************************/
	int methodB() {//왜 메소드 비는 에러일까요? : 리턴을 쓰면 ok 반드시 값이 오거나 변수가 와야한다. 
		int x = 5; 
		int y;// 와이는 합법이다? 불법이다? : 불법이다. //(지역변수는 반드시 초기화를 해야한다. 아니요. y는 초기화가 안되어있다.  선언만 한것임)
		y = x; // y에 5를 대입해주세요 이러면 20번에 return y;써도 에러안남
		// return 0;
		return x; //0 대신에 x가 와도 ok       //return y; 쓰면 에러남. 초기화를 하지 않아서
	}
	public static void main(String[] args) {
		Variable_7 v7 = new Variable_7();
		int x;
		//int x = v7.methodA();    <-에러남
		v7.methodA(); //이렇게 바꿔야 합법
		x = v7.methodB();  //<-에러이유:변수선언이 주석으로 막혔기에 23번처럼 선언해줘야함
		x = x + 2; 
		System.out.println(x);
	}
 // 대입연산자를 통해서 받을 수 있다. //  없다. 언제는 void는 - 리턴 못쓴다.  
}
//총정리
//전역변수는 초기화를 생략 가능 / 지역변수는 초기화를 생략하면 안된다.
//대입연산자를 통해서 값을 재정의 할 수 있다.
//메소드에 리턴타입이 void인 경우와 int인 경우의 차이점을 이해해보자.